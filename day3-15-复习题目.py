## 滑动窗口 py模板
def solution(s, t):
    left, right = 0, 0
    valid = 0
    need, window = {}, {}
    #need是目标，定下来就不动
    for i in t:
        need[i] = need.get(i, 0) + 1
    
    while right < len(s):
        c = s[right] #将进入窗口的字符

        #右移窗口
        right += 1
        # 进行窗口内数据更新
        "window先变化，valid后变化"

        while (window need shrink):
            #将移出窗口的字符
            d = s[left]
            #左移窗口
            left += 1
            #进行窗口内数据更新
            "先处理valid的变化，然后进行window的更新"


    
"""
- 现在开始套模板，只需要思考以下几个问题：

    1、什么时候应该移动 right 扩大窗口？窗口加入字符时，应该更新哪些数据？

    2、什么时候窗口应该暂停扩大，开始移动 left 缩小窗口？
    
    3、从窗口移出字符时，应该更新哪些数据？

    4、我们要的结果应该在扩大窗口时还是缩小窗口时进行更新？

    如果一个字符进入窗口，应该增加 window 计数器；如果一个字符将移出窗口的时候，应该减少 window 计数器；当 valid 满足 need 时应该收缩窗口；应该在收缩窗口的时候更新最终结果。
"""

# 滑动窗口
## 76最小覆盖子串

## 567字符串的排列


## 438找出所有字母异位词

##3 无重复字符的最长子串
    #注意跟新最大长度的时候right-left不用+1了，因为right在前面已经+1过了



# 回溯 3-15

## 78 子集

## 77 组合

## 46 全排列

## 37 解数独 # TODO

--3-16
## 22 括号生成 *


# BFS 3-17
## 111 二叉树的最小高度 *

## 752 解开转盘锁的最小次数 *

## 773 滑块谜题


# nSum 3-18

## 15 threeSum
## 18 nSum *

## 二叉树 3-19

## 104 二叉树的最大深度 （分解的思路，遍历的思路）
## 144 二叉树的前序遍历结果（分解的思路，遍历的思路）
## 226 翻转二叉树
## 114 二叉树展开为链表

## 剑指 Offer 32 - I. 从上到下打印二叉树
## 剑指 Offer 32 - II. 从上到下打印二叉树 II
## 剑指 Offer 32 - III. 从上到下打印二叉树 III
## 剑指 Offer 27. 二叉树的镜像
## 116. 填充每个节点的下一个右侧节点指针
## 剑指 Offer 26. 树的子结构
## 剑指 Offer 28. 对称的二叉树
## 652. 寻找重复的子树